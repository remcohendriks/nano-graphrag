# Neo4j + Qdrant configuration for health check
# This configuration uses Neo4j for graph storage and Qdrant for vector storage

# Storage backends
STORAGE_GRAPH_BACKEND=neo4j
STORAGE_VECTOR_BACKEND=qdrant
STORAGE_KV_BACKEND=json

# Neo4j configuration
NEO4J_URL=neo4j://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=your-secure-password-change-me
NEO4J_DATABASE=neo4j
NEO4J_GRAPH_NAMESPACE=HealthCheckNQ

# Neo4j production parameters
NEO4J_MAX_CONNECTION_POOL_SIZE=50
NEO4J_CONNECTION_TIMEOUT=30.0
NEO4J_MAX_TRANSACTION_RETRY_TIME=30.0
NEO4J_BATCH_SIZE=1000

# Qdrant configuration
QDRANT_URL=http://localhost:6333
# QDRANT_API_KEY=your-api-key-if-needed
QDRANT_COLLECTION_PARAMS={}
# Custom namespace prefix for Qdrant collections
QDRANT_NAMESPACE_PREFIX=test_neo4j_qdrant_working

# Standard test configuration
TEST_WORKING_DIR=./test_neo4j_qdrant_working
TEST_DATA_LINES=1000
TEST_QUERY="What are the main themes?"

# LLM Configuration (matching openai config style)
LLM_PROVIDER=openai
LLM_MODEL=gpt-5-mini
LLM_MAX_TOKENS=32768
LLM_MAX_CONCURRENT=4
LLM_CACHE_ENABLED=true
LLM_TEMPERATURE=0.0
LLM_REQUEST_TIMEOUT=60.0

# Embedding Configuration
EMBEDDING_PROVIDER=openai
EMBEDDING_MODEL=text-embedding-3-small
EMBEDDING_DIMENSION=1536
EMBEDDING_BATCH_SIZE=32
EMBEDDING_MAX_CONCURRENT=4

# Chunking Configuration
CHUNKING_STRATEGY=token
CHUNKING_SIZE=1200
CHUNKING_OVERLAP=100
CHUNKING_TOKENIZER=tiktoken
CHUNKING_TOKENIZER_MODEL=gpt-4o

# Entity Extraction
ENTITY_MAX_GLEANING=0
ENTITY_SUMMARY_MAX_TOKENS=300
ENTITY_STRATEGY=llm

# Graph Clustering
GRAPH_CLUSTERING_ALGORITHM=leiden
GRAPH_MAX_CLUSTER_SIZE=10
GRAPH_CLUSTERING_SEED=3967219502

# Query Configuration
QUERY_ENABLE_LOCAL=true
QUERY_ENABLE_GLOBAL=true
QUERY_ENABLE_NAIVE_RAG=true
QUERY_SIMILARITY_THRESHOLD=0.2

# Enable verbose logging for debugging
ENABLE_DEBUG_LOGGING=true